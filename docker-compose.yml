version: '3.8'
name: 'network-scanner'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: network-scanner-app
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  postgres:
    image: postgres:16
    container_name: network-scanner-postgres
    restart: always
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER" ]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "${RABBITMQ_PORT:-5672}:5672"
      - "${RABBITMQ_WEB_PORT:-15672}:15672"
    env_file:
      - .env
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 5s
      retries: 5

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    depends_on:
      backend:
        condition: service_started

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend

volumes:
  postgres_data:
